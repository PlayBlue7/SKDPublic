<?xml version="1.0" encoding="utf-8" ?>
<dialogs:DialogView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:touch="clr-namespace:TouchEffect;assembly=TouchEffect"
             xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:dialogs="clr-namespace:AiForms.Dialogs.Abstractions;assembly=AiForms.Dialogs.Abstractions"
             xmlns:cviews="clr-namespace:SKD.Common.Views;assembly=SKD.Common"
             xmlns:cvm="clr-namespace:SKD.Common.ViewModels;assembly=SKD.Common"
             xmlns:nado="clr-namespace:Sharpnado.MaterialFrame;assembly=Sharpnado.MaterialFrame"
             xmlns:res="clr-namespace:SKD.Common.Resources"
             xmlns:models="clr-namespace:SKD.Common.Models;assembly=SKD.Common"
             x:DataType="{x:Type cvm:ProjectCardViewModel}"
             ProportionalWidth="1"
             ProportionalHeight="1"
             BackgroundColor="Transparent"
             x:Class="SKD.Common.Views.CardImageOverlayView">
    <dialogs:DialogView.Resources>
        <x:Int32 x:Key="Zero">0</x:Int32>
        <x:Int32 x:Key="One">1</x:Int32>
    </dialogs:DialogView.Resources>
    <dialogs:DialogView.Content>
        <AbsoluteLayout>
            <nado:MaterialFrame x:Name="MaterialFrame" Opacity="0" AbsoluteLayout.LayoutFlags="SizeProportional" AbsoluteLayout.LayoutBounds="0,0,1,1">
                <nado:MaterialFrame.GestureRecognizers>
                    <TapGestureRecognizer Tapped="Button_Clicked"/>
                </nado:MaterialFrame.GestureRecognizers>
            </nado:MaterialFrame>
            <Frame x:Name="Card" AbsoluteLayout.LayoutFlags="XProportional" AbsoluteLayout.LayoutBounds="0.5,0,-1,-1"  CornerRadius="18" Padding="0" BorderColor="Transparent">
                <AbsoluteLayout IsClippedToBounds="True">
                    <AbsoluteLayout x:Name="ImagesAl" FlowDirection="RightToLeft" BackgroundColor="{AppThemeBinding Light={StaticResource CardBackgroundColourLight}, Dark={StaticResource CardBackgroundColourDark}}" AbsoluteLayout.LayoutFlags="SizeProportional" AbsoluteLayout.LayoutBounds="0,0,1,1" IsClippedToBounds="True" VerticalOptions="StartAndExpand">
                        <CarouselView x:Name="CarouselView" FlowDirection="LeftToRight" PeekAreaInsets="0" IndicatorView="IndicatorView" AbsoluteLayout.LayoutFlags="SizeProportional"
                                              AbsoluteLayout.LayoutBounds="0,0,1,1" VerticalOptions="StartAndExpand" ItemsSource="{Binding ImageURIs}">
                            <CarouselView.ItemsLayout>
                                <LinearItemsLayout SnapPointsType="MandatorySingle" SnapPointsAlignment="Start" Orientation="Horizontal" ItemSpacing="0"/>
                            </CarouselView.ItemsLayout>
                            <CarouselView.ItemTemplate>
                                <DataTemplate x:DataType="{x:Null}">
                                    <AbsoluteLayout Padding="0" CompressedLayout.IsHeadless="True" BackgroundColor="Transparent" WidthRequest="{Binding Source={x:Reference CarouselView}, Path=Width}" VerticalOptions="StartAndExpand"
                                        IsClippedToBounds="True" touch:TouchEff.NativeAnimation="True"
                                        touch:TouchEff.Command="{Binding Source={RelativeSource AncestorType={x:Type cviews:CardImageOverlayView}}, Path=TappedCommand}"
                                        touch:TouchEff.CommandParameter="{Binding Source={RelativeSource AncestorType={x:Type cvm:ProjectCardViewModel}}}">
                                        <ff:CachedImage AbsoluteLayout.LayoutFlags="None" AbsoluteLayout.LayoutBounds="0,0,-1,-1" Source="{Binding}" Aspect="AspectFill" 
                                                        VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand" WidthRequest="{Binding Source={x:Reference CarouselView}, Path=Width}"
                                                        HeightRequest="{Binding Source={x:Reference CarouselView}, Path=Height}" DownsampleToViewSize="True"/>
                                        <BoxView AbsoluteLayout.LayoutFlags="WidthProportional,YProportional" AbsoluteLayout.LayoutBounds="0,1,1,24" BackgroundColor="{AppThemeBinding Light={StaticResource TranslucentControlBackgroundColourLight}, Dark={StaticResource TranslucentControlBackgroundColourDark}}"
                                                 IsVisible="{Binding Source={x:Reference IndicatorView}, Path=IsVisible}"/>
                                    </AbsoluteLayout>
                                </DataTemplate>
                            </CarouselView.ItemTemplate>
                        </CarouselView>
                        <IndicatorView x:Name="IndicatorView" FlowDirection="LeftToRight" IndicatorColor="{AppThemeBinding Light={StaticResource UnselectedTextColourLight}, Dark={StaticResource UnselectedTextColourDark}}" SelectedIndicatorColor="{AppThemeBinding Light={StaticResource PrimaryTextColourLight}, Dark={StaticResource PrimaryTextColourDark}}" 
                                       AbsoluteLayout.LayoutFlags="WidthProportional,YProportional" AbsoluteLayout.LayoutBounds="0,1,1,24" IsVisible="{Binding Path=ImageCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter={StaticResource One}}"/>
                        <Button AbsoluteLayout.LayoutFlags="None"  BackgroundColor="{AppThemeBinding Light={StaticResource TranslucentControlBackgroundColourLight}, Dark={StaticResource TranslucentControlBackgroundColourDark}}" CornerRadius="24" AbsoluteLayout.LayoutBounds="16,16,48,48" Clicked="Button_Clicked" 
                            FontFamily="IconFont" Text="{StaticResource CloseIcon}" FontSize="24" TextColor="{AppThemeBinding Light={StaticResource PrimaryTextColourLight}, Dark={StaticResource PrimaryTextColourDark}}"/>
                    </AbsoluteLayout>

                    <AbsoluteLayout x:Name="InfoAl" BackgroundColor="{AppThemeBinding Light={StaticResource CardBackgroundColourLight}, Dark={StaticResource CardBackgroundColourDark}}" IsClippedToBounds="True" AbsoluteLayout.LayoutFlags="SizeProportional" AbsoluteLayout.LayoutBounds="0,0,1,1"
                                        FlowDirection="RightToLeft" Margin="0">
                        <AbsoluteLayout.Triggers>
                            <DataTrigger TargetType="{x:Type AbsoluteLayout}" Binding="{Binding Source={x:Reference InfoAl}, Path=Opacity}" Value="0">
                                <Setter Property="InputTransparent" Value="True"/>
                            </DataTrigger>
                        </AbsoluteLayout.Triggers>
                        <StackLayout x:Name="InfoView" IsClippedToBounds="True" FlowDirection="LeftToRight" AbsoluteLayout.LayoutFlags="WidthProportional"
                                         AbsoluteLayout.LayoutBounds="0,0,1,-1" Padding="16" Spacing="4" Orientation="Vertical" VerticalOptions="StartAndExpand" 
                                         MinimumHeightRequest="244" BindingContext="{Binding Source={RelativeSource AncestorType={x:Type cvm:ProjectCardViewModel}}}"
                                 
                                        touch:TouchEff.Command="{Binding Source={RelativeSource AncestorType={x:Type cviews:ProjectCard}}, Path=TappedCommand}"
                                        touch:TouchEff.CommandParameter="{Binding Source={RelativeSource AncestorType={x:Type cvm:ProjectCardViewModel}}, Path=Source}" touch:TouchEff.NativeAnimation="True">
                            <Label VerticalTextAlignment="Center" Text="{Binding Name}" HorizontalOptions="Start" FontSize="20" Scale="0.9" AnchorX="0" AnchorY="0" FontFamily="LemonMilkMedium"/>
                            <StackLayout Orientation="Horizontal" Spacing="8" IsVisible="{Binding IsUrgent}" Margin="0,0,0,4">
                                <Image VerticalOptions="Center">
                                    <Image.Source>
                                        <FontImageSource Glyph="{StaticResource ErrorIcon}" Color="{StaticResource ErrorAccent}" FontFamily="IconFont" Size="20"/>
                                    </Image.Source>
                                </Image>
                                <Label Text="{x:Static res:AppResources.Urgent}" HeightRequest="24" FontFamily="LemonMilkMedium" FontSize="14" VerticalTextAlignment="Center" TextColor="{StaticResource ErrorAccent}"/>
                            </StackLayout>
                            <Label x:Name="ProgressLabel" Style="{StaticResource ProgressLabel}">
                                <Label.Text>
                                    <MultiBinding StringFormat="{x:Static res:AppResources.ProgressLabelFormat}">
                                        <Binding Path="Raised" Converter="{StaticResource CurrencyConverter}"/>
                                        <Binding Path="Target" Converter="{StaticResource CurrencyConverter}"/>
                                    </MultiBinding>
                                </Label.Text>
                                <Label.Triggers>
                                    <DataTrigger TargetType="{x:Type Label}" Binding="{Binding Status}" Value="{x:Static models:ProjectStatus.Pending}">
                                        <Setter Property="IsVisible" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="{x:Type Label}" Binding="{Binding Status}" Value="{x:Static models:ProjectStatus.Draft}">
                                        <Setter Property="IsVisible" Value="False"/>
                                    </DataTrigger>
                                </Label.Triggers>
                            </Label>
                            <cviews:TransitioningProgressBar Margin="0,4" HorizontalOptions="Start" WidthRequest="{Binding Source={x:Reference ProgressLabel}, Path=Width, Mode=OneWay}"
                                                     BackgroundColor="{AppThemeBinding Light={StaticResource PageBackgroundColourLight}, Dark={StaticResource PageBackgroundColourDark}}" 
                                                     HeightRequest="4" ProgressColor="{Binding AccentColour}" Progress="{Binding Progress}">
                                <cviews:TransitioningProgressBar.Triggers>
                                    <DataTrigger TargetType="{x:Type cviews:TransitioningProgressBar}" Binding="{Binding Status}" Value="{x:Static models:ProjectStatus.Pending}">
                                        <Setter Property="IsVisible" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="{x:Type cviews:TransitioningProgressBar}" Binding="{Binding Status}" Value="{x:Static models:ProjectStatus.Draft}">
                                        <Setter Property="IsVisible" Value="False"/>
                                    </DataTrigger>
                                </cviews:TransitioningProgressBar.Triggers>
                            </cviews:TransitioningProgressBar>
                            <FlexLayout BindableLayout.ItemsSource="{Binding Tags}" CompressedLayout.IsHeadless="True" Margin="0,2,0,0" Wrap="Wrap" Direction="Row">
                                <BindableLayout.ItemTemplate>
                                    <DataTemplate x:DataType="{x:Type cvm:CardTagViewModel}">
                                        <Frame Padding="0,0,12,4" CompressedLayout.IsHeadless="True">
                                            <StackLayout Orientation="Horizontal" Spacing="8">
                                                <Image VerticalOptions="Center">
                                                    <Image.Source>
                                                        <FontImageSource Glyph="{Binding Glyph}" Color="{Binding Colour}" FontFamily="IconFont" Size="20"/>
                                                    </Image.Source>
                                                </Image>
                                                <Label LineBreakMode="NoWrap" Text="{Binding Text}" HeightRequest="24" FontFamily="LemonMilkMedium" FontSize="13" VerticalTextAlignment="Center"/>
                                            </StackLayout>
                                        </Frame>
                                    </DataTemplate>
                                </BindableLayout.ItemTemplate>
                            </FlexLayout>
                        </StackLayout>
                        <Frame AbsoluteLayout.LayoutFlags="None" AbsoluteLayout.LayoutBounds="8,8,-1,48" BackgroundColor="Transparent" CornerRadius="24" Padding="0"
                       IsVisible="{Binding ImageCount, Converter={StaticResource GreaterThanConverter}, ConverterParameter={StaticResource Zero}}"
                       touch:TouchEff.Command="{Binding Source={RelativeSource AncestorType={x:Type cviews:ProjectCard}}, Path=ImageButtonCommand}" touch:TouchEff.NativeAnimation="True">
                            <StackLayout Orientation="Horizontal" BackgroundColor="Transparent" Spacing="6" FlowDirection="LeftToRight" Padding="12,8">
                                <Image>
                                    <Image.Source>
                                        <FontImageSource FontFamily="IconFont" Size="24" Glyph="{StaticResource ImageIcon}" Color="{Binding AccentColour}"/>
                                    </Image.Source>
                                </Image>
                                <Label Text="{Binding ImageCount}" FontFamily="LemonMilkRegular" FontSize="15" VerticalTextAlignment="Center"/>
                            </StackLayout>
                        </Frame>
                    </AbsoluteLayout>
                </AbsoluteLayout>
            </Frame>
        </AbsoluteLayout>
    </dialogs:DialogView.Content>
</dialogs:DialogView>